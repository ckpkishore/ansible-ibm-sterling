---
- name: Check for required environment variables
  ansible.builtin.assert:
    that:
      # Sterling B2B
      - lookup('env', 'SI_INSTANCEID') != ""
      # IBM Registry
      - lookup('env', 'ENTITLED_REGISTRY_KEY') != ""   
    fail_msg: "One or more required environment variables are not defined"

# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------

- name: "Fail si_instanceid is 'not provided' or 'over 8 characters' or 'has uppercase characters'"
  ansible.builtin.assert:
    that:
      - si_instanceid is defined and si_instanceid != ""
      - si_instanceid | length <= 8
      - si_instanceid is match('[a-z0-9]+')
    fail_msg: "Property 'si_instanceid' is greater than 8 character long or has uppercase characters"

- name: "Fail if entitled.registry_key is not provided"
  ansible.builtin.assert:
    that: entitled.registry_key is defined and entitled.registry_key != ""
    fail_msg: "entitled.registry_key property is required"

- name: "Fail if Database Information is not provided"
  ansible.builtin.assert:
    that: 
      - (db2_namespace != "") or (si_dbvendor != "")
    fail_msg: "Database Information property is required"

- name: "Fail if JMS Queue Information is not provided"
  ansible.builtin.assert:
    that: 
      - (mq_namespace != "") or (si_jmsuser != "")
    fail_msg: "JMS Queue Information property is required"
# Debug
# -----------------------------------------------------------------------------
- name: Debug
  debug:
    msg:
      - "SI Instance ID  .............. {{ si_instanceid }}"
      - "SI namespace ................. {{ si_namespace }}"
      - "Database Namespace ........... {{ db2_namespace }}"
      - "JMS Queue Namespace .......... {{ mq_namespace }}"
