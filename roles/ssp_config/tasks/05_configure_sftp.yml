---
- name: Define Facts SFTP
  ansible.builtin.set_fact:
    policy_name: "sftp-policy-01"
    netmap_name: "sftp-netmap-01"
    adapter_name: "sftp-adapter-01"
    adapter_listen_port: "25000"
    host_key: "{{ my_workdir }}/ssh_host_rsa-{{ my_serial }}.key"

- name: Define Facts SFTP  (XML)
  ansible.builtin.set_fact:
    policy_xml: |
      <ftpPolicyDef>
        <description>SFTP Policy</description>
        <eaAuthProfile></eaAuthProfile>
        <eaKeyAuthProfile></eaKeyAuthProfile>
        <keyauthReqdBeforePwdauth>false</keyauthReqdBeforePwdauth>
        <name>{{ policy_name }}</name>
        <preferredAuthentication>password</preferredAuthentication>
        <protocol>sftp</protocol>
        <protocolValidationOn>true</protocolValidationOn>
        <status>locked</status>
        <userAuthentication>none</userAuthentication>
        <userMapping>passthru</userMapping>
      </ftpPolicyDef>
    netmap_xml: |
      <netmapDef>
      <description>FTP_Netmap</description>
      <inboundNodes><inboundNodeDef>
      <description>Inbound</description>
      <logLevel>DEBUG</logLevel>
      <name>Inbound</name>
      <peerAddressPattern>*</peerAddressPattern>
      <policyId>{{ policy_name }}</policyId>
      <secureConnection>false</secureConnection>
      </inboundNodeDef>
      </inboundNodes>
      <name>{{ netmap_name }}</name>
      <outboundNodes><outboundNodeDef>
      <addresses><address>
      <nodeName>Outbound_Node_Name</nodeName>
      <host>10.20.30.40</host>
      <port>1663</port>
      </address>
      </addresses>
      <logLevel>DEBUG</logLevel>
      <name>Outbound_Node_Name</name>
      <secureConnection>false</secureConnection>
      <validDestination>10.20.30.40</validDestination>
      <validDestinationPort>1663</validDestinationPort>
      </outboundNodeDef>
      </outboundNodes>
      <protocol>sftp</protocol>
      <status></status>
      </netmapDef>
    adapter_xml: |
      {
        "name": "sftp-adapter-01",
        "listenPort": "30120",
        "netmap": "sftp-passthru-nm",
            "engineName": "ssp-engine-01",
      }

- name: Create Policy SFTP
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/policy/createPolicy
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ policy_xml }}"
    status_code: 200
    validate_certs: false
  when:
    - ssp_cfg.sftp.policy
    - "policy_name not in get_all_policies.content"
  register: sftp_plc_cout

- name: Ensure the SSH host key exists
  ansible.builtin.command:
    cmd: ssh-keygen -q -t rsa -b 4096 -f {{ host_key }} -N "" -C "host_key"
  when:
    - ssp_cfg.sftp.netmap
    - "netmap_name not in get_all_netmaps.content"
  register: sftp_np_cout

- name: Create Netmap SFTP
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/netmap/createNetmap
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ netmap_xml }}"
    status_code: 200
    validate_certs: false
  when:
    - ssp_cfg.sftp.netmap
    - "netmap_name not in get_all_netmaps.content"
  register: sftp_np_cout

- name: Create Adapter SFTP
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/adapter/createAdapter
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ adapter_xml }}"
    status_code: 200
    validate_certs: false
  when:
    - ssp_cfg.sftp.adapter
    - "adapter_name not in get_all_adapters.content"
  register: sftp_adp_cout
