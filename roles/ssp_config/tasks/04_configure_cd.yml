---
- name: Define Facts C:D
  ansible.builtin.set_fact:
    policy_name: "cd-passthru-policy"
    netmap_name: "cd-netmap-01"
    adapter_name: "cd-adapter-01"
    adapter_listen_port: "25000"


- name: Define Facts C:D (XML)
  ansible.builtin.set_fact:
    policy_xml: |
      <cdPolicyDef>
        <copyStepAllowed>true</copyStepAllowed>
        <eaCertValidation>false</eaCertValidation>
        <ipAddressCheck>false</ipAddressCheck>
        <name>{{ policy_name }}</name>
        <protocol>cd</protocol>
        <protocolErrorAction>NONE</protocolErrorAction>
        <protocolValidationOn>true</protocolValidationOn>
        <runJobStepAllowed>true</runJobStepAllowed>
        <runTaskStepAllowed>true</runTaskStepAllowed>
        <status></status>
        <submitStepAllowed>true</submitStepAllowed>
        <userAuthentication>none</userAuthentication>
        <userMapping>noUserID</userMapping>
      </cdPolicyDef>
    netmap_xml: |
      <netmapDef>
        <description>Connect:Direct Netmap</description>
        <inboundNodes>
          <inboundNodeDef>
            <addresses>
              <address>
                <nodeName>CDNODE01</nodeName>
                <host>s0-ibm-cd.sterling-cdnode01.svc.cluster.local</host>
                <port>4163</port>
              </address>
            </addresses>
            <description>CDNODE01 - internal</description>
            <logLevel>NONE</logLevel>
            <name>CDNODE01</name>
            <outboundACLNodes>
              <outboundACLNode>CDNODE01</outboundACLNode>
            </outboundACLNodes>
            <peerAddressPattern>s0-ibm-cd.sterling-cdnode01.svc.cluster.local</peerAddressPattern>
            <policyId>{{policy_name}}</policyId>
            <port>4163</port>
            <routingName>CDNODE01</routingName>
            <secureConnection>false</secureConnection>
            <serverAddress>s0-ibm-cd.sterling-cdnode01.svc.cluster.local</serverAddress>
            <tcpTimeout>90</tcpTimeout>
          </inboundNodeDef>
        </inboundNodes>
        <name>{{ netmap_name }}</name>
        <outboundACLRequired>false</outboundACLRequired>
        <protocol>cd</protocol>
        <status></status>
      </netmapDef>
    adapter_xml: |
      <cdAdapterDef>
        <encryptionLevel>false</encryptionLevel>
        <engines>
          <engine>
          <engineName>ssp-engine-01</engineName>
          <psInName>local</psInName>
          <psOutName>local</psOutName>
          <eaPSName>local</eaPSName>
          <eaServerName>local</eaServerName>
          <startupMode>auto</startupMode>
          </engine>
        </engines>
        <faspPortrange>1000-2000</faspPortrange>
        <listenPort>{{ adapter_listen_port }}</listenPort>
        <logLevel>DEBUG</logLevel>
        <maxSessions>20</maxSessions>
        <name>{{ adapter_name }}</name>
        <netmap>{{ netmap_name }}</netmap>
        <netmapKey>CDNODE01</netmapKey>
        <properties>
        </properties>
        <protocol>cd</protocol>
        <sessionTimeout>90</sessionTimeout>
        <standardRoute>CDNODE01</standardRoute>
        <status></status>
        <urlRoutingType>standardRouting</urlRoutingType>
      </cdAdapterDef>

- name: Create Policy C:D
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/policy/createPolicy
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ policy_xml }}"
    status_code: 200
    validate_certs: false
    return_content: true
  when:
    - ssp_cfg.cd.policy
    - "policy_name not in get_all_policies.content"
  register: cd_plc_cout

- name: Create Netmap C:D
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/netmap/createNetmap
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ netmap_xml }}"
    status_code: 200
    validate_certs: false
  when:
    - ssp_cfg.cd.netmap
    - "netmap_name not in get_all_netmaps.content"
  register: cd_np_cout

- name: Create Adapter C:D
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/adapter/createAdapter
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ adapter_xml }}"
    status_code: 200
    validate_certs: false
  when:
    - ssp_cfg.cd.adapter
    - "adapter_name not in get_all_adapters.content"
  register: cd_adp_cout
