---
- name: Define Facts
  ansible.builtin.set_fact:
    config_name: "SFTP"
    create_policy: "{{ ssp_config_sftp.create_policy }}"
    create_netmap: "{{ ssp_config_sftp.create_netmap }}"
    create_adapter: "{{ ssp_config_sftp.create_adapter }}"
    policy_xml: |
      <sftpPolicyDef>
        <name>sftp-policy-test</name>
        <description><![CDATA[]]></description>
        <eaCertValidation>false</eaCertValidation>
        <protocol>sftp</protocol>
        <protocolValidationOn>true</protocolValidationOn>
        <status></status>
        <userAuthentication>none</userAuthentication>
        <userMapping>passthru</userMapping>
      </sftpPolicyDef>
    netmap_xml: |
      <netmapDef>
        <description>SFTP_Netmap</description>
        <inboundNodes><inboundNodeDef>
          <description>Inbound</description>
          <logLevel>DEBUG</logLevel>
          <name>Inbound</name>
          <peerAddressPattern>*</peerAddressPattern>
          <policyId>SFTP_Policy_test</policyId>
          <secureConnection>false</secureConnection>
        </inboundNodeDef></inboundNodes>
        <name>SFTP_Netmap_test</name>
        <outboundNodes><outboundNodeDef>
          <addresses><address>
            <nodeName>Outbound_Node_Name</nodeName>
            <host>10.20.30.40</host>
            <port>1663</port>
          </address></addresses>
          <logLevel>DEBUG</logLevel>
          <name>Outbound_Node_Name</name>
          <secureConnection>false</secureConnection>
          <validDestination>10.20.30.40</validDestination>
          <validDestinationPort>1663</validDestinationPort>
        </outboundNodeDef></outboundNodes>
        <protocol>sftp</protocol>
        <status></status>
      </netmapDef>
    adapter_xml: |
      <sftpAdapterDef>
        <description><![CDATA[x]]></description>
        <engines></engines>
        <listenPort>20</listenPort>
        <logLevel>ERROR</logLevel>
        <loginBannerText><![CDATA[Hello new user]]></loginBannerText>
        <maxSessions>20</maxSessions>
        <name>SFTP_Adapter_test</name>
        <netmap>SFTP_Netmap_test</netmap>
        <netmapKey>Outbound_Node_Name</netmapKey>
        <properties>
          <property>
            <name>sftp.commands.allowed</name>
            <value></value>
          </property>
          <property>
            <name>sftp.commands.prohibited</name>
            <value></value>
          </property>
          <property>
            <name>sftp.max.command.length</name>
            <value>1024</value>
          </property>
          <property>
            <name>sftp.max.response.length</name>
            <value>4096</value>
          </property>
          <property>
            <name>sftp.ssl.pbsz.required</name>
            <value>Y</value>
          </property>
          <property>
            <name>sftp.ssl.prot.required</name>
            <value>Y</value>
          </property>
          <property>
            <name>max.ps.client.threads</name>
            <value>10</value>
          </property>
          <property>
            <name>max.ps.server.threads</name>
            <value>10</value>
          </property>
        </properties>
        <protocol>sftp</protocol>
        <serverGreetingBannerText><![CDATA[Hello]]></serverGreetingBannerText>
        <sessionTimeout>3</sessionTimeout>
        <standardRoute>Outbound_Node_Name</standardRoute>
        <status></status>
        <urlRoutingType>standardRouting</urlRoutingType>
        <usePasvIP>false</usePasvIP>
      </sftpAdapterDef>

# POST https://localhost:8443/sspcmrest/sspcm/rest/policy/createPolicy
- name: Create Policy {{ config_name }}
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/policy/createPolicy
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ policy_xml }}"
    status_code: 200
    validate_certs: false
  when: create_policy
  register: policy_result

- name: Create Netmap {{ config_name }}
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/netmap/createNetmap
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ netmap_xml }}"
    status_code: 200
    validate_certs: false
  when: create_netmap
  register: netmap_result

- name: Create Adapter {{ config_name }}
  ansible.builtin.uri:
    url: https://{{ ssp_cm_url }}/sspcmrest/sspcm/rest/adapter/createAdapter
    method: POST
    headers:
      X-Authentication: "{{ session_token }}"
      Content-Type: "application/xml"
    body: "{{ adapter_xml }}"
    status_code: 200
    validate_certs: false
  when: create_adapter
  register: adapter_result
