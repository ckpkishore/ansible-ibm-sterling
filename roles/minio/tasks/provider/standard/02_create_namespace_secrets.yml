---
# Create Kubernetes namespace
# -----------------------------------------------------------------------------
- name: Create namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ minio_namespace }}"
        labels:
          name: minio
  register: cout

# Create Secrets
# -----------------------------------------------------------------------------
- name: Create Secrets
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: minio-secret
        namespace: "{{ minio_namespace }}"
        labels:
          app: minio
      type: Opaque
      stringData:
        MINIO_ROOT_USER: "{{ minio_root_user }}"
        MINIO_ROOT_PASSWORD: "{{ minio_root_password }}"

# # Create ServiceAccount
# -----------------------------------------------------------------------------
- name: Create Service Account 
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: minio-sa
        namespace: "{{ minio_namespace }}"

# Create Role Binding
# -----------------------------------------------------------------------------
- name: Create Role Binding
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: 'minio-anyuid'
        namespace: "{{ minio_namespace }}"
        labels:
          app: minio
      subjects:
        - kind: ServiceAccount
          name: minio-sa
          namespace: "{{ minio_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: 'system:openshift:scc:anyuid'
