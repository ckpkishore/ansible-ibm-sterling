---
# Create Kubernetes namespace
# -----------------------------------------------------------------------------
- name: "Create namespace for DB2"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ db2_namespace }}"
  register: cout

# Create ServiceAccount for DB2
# -----------------------------------------------------------------------------
- name: Create Service Account for DB2
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ db2_service_account }}"
        namespace: "{{ db2_namespace }}"

- name: Add privileged SCC to service account
  ansible.builtin.command: oc adm policy add-scc-to-user privileged -n {{ db2_namespace }} -z {{ db2_service_account }}

# TODO: Need to migrate to kubernetes.core.k8s module
# - name: Add privileged SCC to service account
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: security.openshift.io/v1
#       kind: SecurityContextConstraints
#       metadata:
#         name: "{{db2_service_account}}"
#         namespace: "{{ db2_namespace }}"
#       users:
#         - system:serviceaccount:{{ db2_namespace }}:{{ db2_name }}
#       allowPrivilegedContainer: true

# Create Secrets on Kubernetes
# -----------------------------------------------------------------------------
- name: Create secret content '{{ db2_registry_secret }}'
  no_log: true
  vars:
    entitled_auth_str: "{{ entitled_registry_user }}:{{ entitled_registry_key }}"
    entitled_auth_b64: "{{ entitled_auth_str | b64encode }}"
    content:
      - '{"auths":{"{{ entitled_registry }}":{"username":"{{ entitled_registry_user }}","password":"{{ entitled_registry_key }}",'
      - '"email":"{{ entitled_registry_user }}","auth":"{{ entitled_auth_b64 }}"}'
      - "}"
      - "}"
  ansible.builtin.set_fact:
    new_secret: "{{ content | join('') }}"

- name: "Generate secret '{{ db2_registry_secret }}'"
  no_log: true
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: "{{ db2_registry_secret }}"
        namespace: "{{ db2_namespace }}"
      data:
        .dockerconfigjson: "{{ new_secret | to_json | b64encode }}"
  register: ibm_registry_secret_cout

- name: "Generate secret '{{ db2_secret }}'"
  no_log: false
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ db2_secret }}"
        namespace: "{{ db2_namespace }}"
      data:
        DB2INST1_PASSWORD: "{{ db2_password | b64encode }}"
