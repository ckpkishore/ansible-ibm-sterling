---
# Create Kubernetes namespace
# -----------------------------------------------------------------------------
- name: "Create namespace for DB2"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ db2_namespace }}"
  register: cout

# Create ServiceAccount for DB2
# -----------------------------------------------------------------------------
- name: Create Service Account for DB2
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{db2_service_account}}"
        namespace: "{{ db2_namespace }}"

- name: Add privileged SCC to service account
  ansible.builtin.command: oc adm policy add-scc-to-user privileged -n {{ db2_namespace }} -z {{ db2_service_account }}

# FIXME: Need to migrate to kubernetes.core.k8s module
# - name: Add privileged SCC to service account
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: security.openshift.io/v1
#       kind: SecurityContextConstraints
#       metadata:
#         name: "{{db2_service_account}}"
#         namespace: "{{ db2_namespace }}"
#       users:
#         - system:serviceaccount:{{ db2_namespace }}:{{ db2_name }}
#       allowPrivilegedContainer: true

# Create Secrets on Kubernetes
# -----------------------------------------------------------------------------
- name: Create '{{ db2_registry_secret }}' secret content
  no_log: true
  vars:
    entitledAuthStr: "{{ entitled.registry_user }}:{{ entitled.registry_key }}"
    entitledAuth: "{{ entitledAuthStr | b64encode }}"
    content:
      - "{\"auths\":{\"{{ entitled.registry }}\":{\"username\":\"{{ entitled.registry_user }}\",\"password\":\"{{ entitled.registry_key }}\",\"email\":\"{{ entitled.registry_user }}\",\"auth\":\"{{ entitledAuth }}\"}"
      - "}"
      - "}"
  ansible.builtin.set_fact:
    new_secret: "{{ content | join('') }}"

- name: "Generate '{{ db2_registry_secret }}' secret"
  no_log: true
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: "{{ db2_registry_secret }}"
        namespace: "{{ db2_namespace }}"
      data:
        .dockerconfigjson: "{{ new_secret | to_json | b64encode }}"
  register: ibm_registry_secret_cout

- name: "Generate '{{ db2_secret }}' secret"
  no_log: false
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ db2_secret }}"
        namespace: "{{ db2_namespace }}"
      data:
       DB2INST1_PASSWORD: "{{ db2_password | b64encode }}"
