---
- name: Define multiple variables
  ansible.builtin.set_fact:
    pem_cert_crt_file: "{{ my_workdir }}/pem-cert-{{ my_serial }}.crt"
    pem_keystore_file_jks: "{{ my_workdir }}/pem-keystore-{{ my_serial }}.jks"
    pem_keystore_file_p12: "{{ my_workdir }}/pem-keystore-{{ my_serial }}.p12"

# Create KeyStore
# -----------------------------------------------------------------------------
- name: Create Java KeyStore
  ansible.builtin.command:
    cmd: >-
      keytool -genkeypair -keyalg RSA -keysize 2048 -validity 3650 -alias {{ pem_deploy_keyalias }}
      -keystore {{ pem_keystore_file_jks }} -storepass {{ pem_keystore_password }} -storetype JKS
      -keypass {{ pem_keystore_password }}
      -dname "CN=*.ibm-pem.com/OU=PEM/O=Sterling/L=/ST=/C=US"
      -ext "SAN=dns:*.ibm-pem.com,dns:pempp.ibm-pem.com,dns:pemcm.ibm-pem.com,dns:pempr.ibm-pem.com,dns:pem.ibm-pem.com,dns:api.ibm-pem.com,dns:ibm-pem.com"
  changed_when: true

- name: Create PKCS12 KeyStore
  ansible.builtin.command:
    cmd: >-
      keytool -importkeystore
      -srckeystore {{ pem_keystore_file_jks }} -srcstorepass {{ pem_keystore_password }}
      -destkeystore {{ pem_keystore_file_p12 }}  -deststorepass {{ pem_keystore_password }} -deststoretype PKCS12
  changed_when: true

- name: Export key
  ansible.builtin.command:
    cmd: >-
      keytool -export -alias {{ pem_deploy_keyalias }}
      -keystore {{ pem_keystore_file_jks }} -storepass {{ pem_keystore_password }}
      -rfc -file {{ pem_cert_crt_file }}
  changed_when: true

# Create Secret with Certificate
# -----------------------------------------------------------------------------
- name: Create Secret '{{ pem_deploy_cert_jks_secret }}'
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ pem_deploy_cert_jks_secret }}"
        namespace: "{{ pem_namespace }}"
      data:
        pem-keystore.jks: "{{ lookup('file', pem_keystore_file_jks) | b64encode }}"

- name: Create Secret '{{ pem_deploy_cert_p12_secret }}'
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ pem_deploy_cert_p12_secret }}"
        namespace: "{{ pem_namespace }}"
      data:
        pem-keystore.p12: "{{ lookup('file', pem_keystore_file_p12) | b64encode }}"

- name: Create Secret 'pemapi-keystore.jks'
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "pemapi-keystore.jks"
        namespace: "{{ pem_namespace }}"
      data:
        pemapi-keystore.jks: "{{ lookup('file', pem_keystore_file_jks) | b64encode }}"

- name: Create Secret '{{ pem_deploy_cert_crt_secret }}''
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ pem_deploy_cert_crt_secret }}"
        namespace: "{{ pem_namespace }}"
      data:
        pem-cert.crt: "{{ lookup('file', pem_cert_crt_file) | b64encode }}"

- name: Read local the file content '{{ pem_cert_crt_file }}'
  ansible.builtin.set_fact:
    pem_cert_content_temp: "{{ lookup('file', pem_cert_crt_file) }}"

- name: Fix characters on pem_cert_content
  ansible.builtin.set_fact:
    pem_cert_content: "{{ pem_cert_content_temp | regex_replace('\\r\\n', '\\n') }}"
