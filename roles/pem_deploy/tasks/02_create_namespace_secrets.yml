---
# Create Kubernetes namespace
# -----------------------------------------------------------------------------
- name: "Create namespace for Sterling PEM"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ pem_namespace }}"
  register: cout

# Create ConfigMap on Kubernetes
# -----------------------------------------------------------------------------
- name: "Generate ConfigMap"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "localtime"
        namespace: "{{ pem_namespace }}"
      data:
        localtime: |
            {{ lookup('file', 'files/UTC') }}

# Create Secrets on Kubernetes
# -----------------------------------------------------------------------------
- name: Create secret content '{{ pem_registry_secret }}'
  no_log: false
  vars:
    entitled_auth_str: "cp:{{ entitled_registry_key }}"
    entitled_auth_b64: "{{ entitled_auth_str | b64encode }}"
    content:
      - '{"auths":{"cp.icr.io":{"username":"cp","password":"{{ entitled_registry_key }}",'
      - '"email":"cp","auth":"{{ entitled_auth_b64 }}"}'
      - "}"
      - "}"
  ansible.builtin.set_fact:
    new_secret: "{{ content | join('') }}"

- name: "Generate secret '{{ pem_registry_secret }}'"
  no_log: false
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: "{{ pem_registry_secret }}"
        namespace: "{{ pem_namespace }}"
      data:
        .dockerconfigjson: "{{ new_secret | to_json | b64encode }}"
  register: ibm_registry_secret_cout

- name: "Generate secret '{{ pem_deploy_secret }}'"
  no_log: false
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ pem_deploy_secret }}"
        namespace: "{{ pem_namespace }}"
      stringData:
        ADMIN_PASSWORD: password # Only for documentation
        ADMIN_USERID: admin # Only for documentation
        DB_PASSWORD: "{{ pem_dbpassword }}"
        DB_SSLTRUSTSTORE_PASSWORD: "{{ pem_keystore_password }}"
        GATEWAY_SERVERS_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        GATEWAY_TRUSTSTORE_PASSWORD: "{{ pem_keystore_password }}"
        PEM_SERVERS_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        PP_SERVERS_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        PR_SERVERS_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        PROXY_PASSWORD: 
        PURGE_TARGET_DB_PASSWORD:
        PURGE_TARGET_DB_TRUSTSTORE_PASSWORD:
        SSO_KEYSTOREPASSWORD:
        SSO_TRUSTSTOREPASSWORD:
        TESTDB_SSLTRUSTSTORE_PASSWORD:
        TESTMODE_DB_PASSWORD: "{{ pem_dbpassword }}"
        WMQ_SERVERS_PASSWORD:
        passphrase.txt: "{{ pem_default_passphrase }}"
        # Mandatory No
        # passphraseOld.txt: "{{ pem_default_passphrase }}" 
        # passphraseNew.txt: "{{ pem_default_passphrase }}" 

- name: "Generate secret '{{ pem_deploy_cm_prod_secret }}'"
  no_log: false
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ pem_deploy_cm_prod_secret }}"
        namespace: "{{ pem_namespace }}"
      stringData:
        API_PASSWORD: "{{ pem_default_password }}"
        APPLICATION_PASSPHRASE: "{{ pem_default_passphrase }}"
        CLIENT_SECRET: "{{ pem_keystore_password }}"
        DB_PASS: "{{ pem_dbpassword }}"
        DB_TRUSTSTORE_PASSWORD: "{{ pem_keystore_password }}"
        PEM_API_PASSWORD: "{{ pem_default_password }}"
        PEM_DB_PASSWORD: "{{ pem_dbpassword }}"
        PGP_PASSPHRASE: "{{ pem_default_password }}"
        SAML_KEY_PASSWORD:
        SAML_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SEAS_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SEAS_TRUSTSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SERVER_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SMTP_PASSWORD:
        SSP_PASSWORD: "{{ pem_default_password }}"
        STERLING_B2BAPI_PASSWORD: "{{ pem_b2bi_pw }}"
        STERLING_CONNECTVITYAPI_PASSWORD: "{{ pem_b2bi_apipw }}"
        STERLING_SFGAPI_PASSWORD: "{{ pem_b2bi_apipw }}"
        STERLING_SYSTEM_PASSPHRASE: "{{ pem_b2bi_passphrase }}"
        OAUTH2_CMKS:

- name: "Generate secret '{{ pem_deploy_cm_nonprod_secret }}'"
  no_log: false
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ pem_deploy_cm_nonprod_secret }}"
        namespace: "{{ pem_namespace }}"
      stringData:
        API_PASSWORD: "{{ pem_default_password }}"
        APPLICATION_PASSPHRASE: "{{ pem_default_passphrase }}"
        CLIENT_SECRET: "{{ pem_keystore_password }}"
        DB_PASS: "{{ pem_dbpassword }}"
        DB_TRUSTSTORE_PASSWORD: "{{ pem_keystore_password }}"
        PEM_API_PASSWORD: "{{ pem_default_password }}"
        PEM_DB_PASSWORD: "{{ pem_dbpassword }}"
        PGP_PASSPHRASE: "{{ pem_default_password }}"
        SAML_KEY_PASSWORD:
        SAML_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SEAS_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SEAS_TRUSTSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SERVER_KEYSTORE_PASSWORD: "{{ pem_keystore_password }}"
        SMTP_PASSWORD:
        SSP_PASSWORD: "{{ pem_default_password }}"
        STERLING_B2BAPI_PASSWORD: "{{ pem_b2bi_pw }}"
        STERLING_CONNECTVITYAPI_PASSWORD: "{{ pem_b2bi_apipw }}"
        STERLING_SFGAPI_PASSWORD: "{{ pem_b2bi_apipw }}"
        STERLING_SYSTEM_PASSPHRASE: "{{ pem_b2bi_passphrase }}"
        OAUTH2_CMKS:
