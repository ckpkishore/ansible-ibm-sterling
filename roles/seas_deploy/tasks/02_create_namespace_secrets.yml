---
# Create Kubernetes namespace
# -----------------------------------------------------------------------------
- name: "Create namespace for SEAS"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ seas_namespace }}"
  register: cout

# Create Secrets on Kubernetes
# -----------------------------------------------------------------------------
- name: Create secret content
  no_log: true
  vars:
    entitled_auth_str: "{{ entitled_registry_user }}:{{ entitled_registry_key }}"
    entitled_auth_b64: "{{ entitled_auth_str | b64encode }}"
    content:
      - '{"auths":{"{{ entitled_registry }}":{"username":"{{ entitled_registry_user }}","password":"{{ entitled_registry_key }}",'
      - '"email":"{{ entitled_registry_user }}","auth":"{{ entitled_auth_b64 }}"}'
      - "}"
      - "}"
  ansible.builtin.set_fact:
    new_secret: "{{ content | join('') }}"

- name: "Generate secret '{{ seas_registry_secret }}'"
  no_log: true
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: "{{ seas_registry_secret }}"
        namespace: "{{ seas_namespace }}"
      data:
        .dockerconfigjson: "{{ new_secret | to_json | b64encode }}"

- name: "Generate SEAS secret '{{ seas_secret }}'"
  no_log: true
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: Generic
      metadata:
        name: "{{ seas_secret }}"
        namespace: "{{ seas_namespace }}"
      data:
        sysPassphrase: "{{ seas_sys_passphrase | b64encode }}"
        adminPassword: "{{ seas_admin_password | b64encode }}"
        keyStorePassphrase: "{{ seas_keystore_passphrase | b64encode }}"
        trustStorePassphrase: "{{ seas_truststore_passphrase | b64encode }}"
