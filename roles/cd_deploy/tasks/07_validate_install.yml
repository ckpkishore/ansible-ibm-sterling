---
# Check the Helm chart release status by invoking the following command and verify that the STATUS is DEPLOYED:
# helm status my-release

# Wait for the pod to be ready. To verify the pods status (READY) use the dashboard or through the command line
# interface by invoking the following command:
# kubectl get pods -l release my-release -n my-namespace -o wide

# To view the service and ports exposed to enable communication in a pod invoke the following command:
# kubectl get svc -l release= my-release -n my-namespace -o wide

# The screen output displays the external IP and exposed ports under EXTERNAL-IP and PORT(S) column respectively.
# If external LoadBalancer is not present, refer Master node IP as external IP.

# # https://docs.ansible.com/ansible/latest/collections/kubernetes/core/helm_module.html
# - name: Deploy Connect:Direct chart from local path
#   kubernetes.core.helm:
#     name: "{{ cd_helm_release }}"
#     chart_ref: "{{ my_workdir }}/ibm-connect-direct/"
#     release_namespace: "{{ cd_namespace }}"
#     wait: True
#     timeout: "{{ cd_helm.timeout }}"
#     values_files:
#       - "{{ my_workdir }}/mycd_values.yml"



# Exposed Services

# If required, this chart can create a service of ClusterIP for communication within the cluster. This type can
# be changed while installing chart using service.type key defined in values.yaml. There are two ports where IBM
# Connect:Direct processes run. API port (1363) and FT port (1364), whose values can be updated during chart
# installation using service.apiport.port or service.ftport.port.

# You can check install using this commands:

# $ oc get pods
# NAME                                    READY   STATUS    RESTARTS   AGE
# sterling-c-1a18-ib-1332-0   1/1     Running   0          24s

# $ oc logs -f sterling-c-1a18-ib-1332-0
# You can access using this commands:

# $ oc get svc
#
#
#
# - name: Get pods
#  ansible.builtin.k8s_info:
#    api_version: v1
#    kind: Pod
#    namespace: grafana
#  #    label_selectors:
#  #      release: my-release
#  register: pods_info
#
#- name: Extract pod names and statuses and create custom fact
#  set_fact:
#    k8s_pods: "{{ pods_info.resources | map(attribute='metadata.name')| list }}"
#
#- name: Extract pod names
#  debug:
#    msg: "Pod name: {{ k8s_pods }}"
#
#- name: Get services
#  ansible.builtin.k8s_info:
#    kind: Service
#    namespace: grafana
#  register: services_info
