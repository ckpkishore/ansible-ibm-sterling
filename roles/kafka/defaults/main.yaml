---
kafka_provider: "{{ lookup('env', 'KAFKA_PROVIDER') | default('strimzi', true) }}"

# vars for red hat amq or strimzi
amq_exists: false # initialize variable
kafka_defaults:
  strimzi:
    version: "3.7.0" # Supported versions for strimzi-cluster-operator.v0.40.0 are: [3.6.0, 3.6.1, 3.7.0]
    namespace: "sterling-kafka-strimzi"
    operator_name: "strimzi-kafka-operator"
    alias_name: "Strimzi"
  redhat:
    version: "3.7.0"
    namespace: "sterling-kafka-amq-streams"
    operator_name: "amq-streams"
    alias_name: "Red Hat AMQ Streams"

kafka_version: "{{ lookup('env', 'KAFKA_VERSION') | default(kafka_defaults[kafka_provider].version, true) }}"
kafka_namespace: "{{ lookup('env', 'KAFKA_NAMESPACE') | default(kafka_defaults[kafka_provider].namespace, true) }}"
kafka_operator_name: "{{ kafka_defaults[kafka_provider].operator_name }}"

kafka_cluster_name: "{{ lookup('env', 'KAFKA_CLUSTER_NAME') | default('sterling-kfk', true) }}"
kafka_cluster_size: "{{ lookup('env', 'KAFKA_CLUSTER_SIZE') | default('small', true) }}"  # small, large
kafka_storage_class: "{{ lookup('env', 'KAFKA_STORAGE_CLASS') }}"
kafka_storage_size: "{{ lookup('env', 'KAFKA_STORAGE_SIZE') | default('100Gi', true) }}"
zookeeper_storage_class: "{{ lookup('env', 'ZOOKEEPER_STORAGE_CLASS') }}"
zookeeper_storage_size: "{{ lookup('env', 'ZOOKEEPER_STORAGE_SIZE') | default('10Gi', true) }}"
kafka_user_name: "{{ lookup('env', 'KAFKA_USER_NAME') | default('siuser', true) }}"
kafka_user_password: "{{ lookup('env', 'KAFKA_USER_PASSWORD') | default(lookup('ansible.builtin.password', '/dev/null chars=ascii_lowercase,digits length=16'), true) }}"

# When these variables are defined we will create the KafkaCfg resource, if either is missing then the configuration will not be generated
si_instance_id: "{{ lookup('env', 'SI_INSTANCE_ID') }}"
si_config_dir: "{{ lookup('env', 'SI_CONFIG_DIR') }}"

# Custom Labels
custom_labels: "{{ lookup('env', 'CUSTOM_LABELS') | default(None, true) }}" # | string | ibm.mas_devops.string2dict()

storage_class_matrix:
  ibmcloud:
    rwx: "ibmc-file-gold-gid"   # ReadWriteMany
    rwx_nogid: "ibmc-file-gold" # ReadWriteMany no GID
    rwo: "ibmc-block-gold"      # ReadWriteOnce
    rom: ""                     # ReadOnlyMany
    rwop: ""                    # ReadWriteOncePod
  redhat:
    rwx: "ocs-storagecluster-cephfs"
    rwx_nogid: "ocs-storagecluster-cephfs"
    rwo: "ocs-storagecluster-cephfs" # "ocs-storagecluster-ceph-rbd"
    rom: ""
    rwop: ""
  aws:
    rwx: "efs"
    rwx_nogid: "efs"
    rwo: "gp2"
    rom: ""
    rwop: ""
  azure:
    rwx: "azurefiles-premium"
    rwx_nogid: "azurefiles-premium"
    rwo: "managed-premium"
    rom: ""
    rwop: ""
  techzone:
    rwx: "managed-nfs-storage"
    rwx_nogid: "managed-nfs-storage"
    rwo: "managed-nfs-storage"
    rom: "managed-nfs-storage"
    rwop: "managed-nfs-storage"
  ibm-spectrum:
    rwx: "scale-cnsa"
    rwx_nogid: "scale-cnsa"
    rwo: "scale-cnsa"
    rom: "scale-cnsa"
    rwop: "scale-cnsa"
