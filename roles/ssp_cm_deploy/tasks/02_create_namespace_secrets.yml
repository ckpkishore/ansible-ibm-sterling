---
# Create Kubernetes namespace
# -----------------------------------------------------------------------------
- name: "Create namespace for SSP Configuration Manager"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ ssp_cm_namespace }}"
  register: cout

# Create Secrets on Kubernetes
# -----------------------------------------------------------------------------
- name: Create secret content
  no_log: true
  vars:
    entitled_auth_str: "{{ entitled_registry_user }}:{{ entitled_registry_key }}"
    entitled_auth_b64: "{{ entitled_auth_str | b64encode }}"
    content:
      - '{"auths":{"{{ entitled_registry }}":{"username":"{{ entitled_registry_user }}","password":"{{ entitled_registry_key }}",'
      - '"email":"{{ entitled_registry_user }}","auth":"{{ entitled_auth_b64 }}"}'
      - "}"
      - "}"
  ansible.builtin.set_fact:
    new_secret: "{{ content | join('') }}"

- name: "Generate secret '{{ ssp_cm_registry_secret }}'"
  no_log: true
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: "{{ ssp_cm_registry_secret }}"
        namespace: "{{ ssp_cm_namespace }}"
      data:
        .dockerconfigjson: "{{ new_secret | to_json | b64encode }}"

# - name: "Generate SSP CM secret '{{ ssp_cm_secret }}'"
#   no_log: true
#   kubernetes.core.k8s:
#     definition:
#       apiVersion: v1
#       kind: Secret
#       type: Generic
#       metadata:
#         name: "{{ ssp_cm_secret }}"
#         namespace: "{{ ssp_cm_namespace }}"
#       data:
#         sysPassphrase: "{{ ssp_cm_sys_passphrase | b64encode }}"
#         adminPassword: "{{ ssp_cm_admin_password | b64encode }}"
#         keyStorePassphrase: "{{ ssp_cm_keystore_passphrase | b64encode }}"
#         trustStorePassphrase: "{{ ssp_cm_truststore_passphrase | b64encode }}"
